<?php

/**
 * @file
 * Install and update functions for the blp_group_eventseries_group module.
 */

use Drupal\search_api\Entity\Index;

/**
 * Implements hook_install().
 */
function blp_group_eventseries_group_install() {
  // Set some default permissions.
  _blp_group_eventseries_group_set_permissions();

  // Set module weight higher as the weight of the "Social Group" module because
  // needs have the Views group type field which added via the "Social Group"
  // module.
  module_set_weight('blp_group_eventseries_group', 5);
}

/**
 * Function to set permissions.
 */
function _blp_group_eventseries_group_set_permissions() {
  $roles = \Drupal::entityQuery('user_role')
    ->condition('id', 'administrator', '<>')
    ->execute();

  foreach ($roles as $role) {
    $permissions = _blp_group_eventseries_group_get_permissions($role);
    user_role_grant_permissions($role, $permissions);
  }
}

/**
 * Build the permissions.
 *
 * @param string $role
 *   The role.
 *
 * @return array
 *   Returns an array containing the permissions.
 */
function _blp_group_eventseries_group_get_permissions($role) {
  // Anonymous.
  $permissions['anonymous'] = [];

  // Authenticated.
  $permissions['authenticated'] = array_merge($permissions['anonymous'], [
    'create es_group group',
  ]);

  // Content manager.
  $permissions['contentmanager'] = array_merge($permissions['authenticated'], []);

  // Site manager.
  $permissions['sitemanager'] = array_merge($permissions['contentmanager'], []);

  return $permissions[$role] ?? [];
}

